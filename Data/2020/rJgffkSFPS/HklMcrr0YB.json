{"experience_assessment": "I have published one or two papers in this area.", "rating": "3: Weak Reject", "review_assessment:_checking_correctness_of_experiments": "I carefully checked the experiments.", "review_assessment:_thoroughness_in_paper_reading": "I read the paper at least twice and used my best judgement in assessing the paper.", "title": "Official Blind Review #3", "review": "This paper proposed BOGCN-NAS that encodes current architecture with Graph convolutional network (GCN) and uses the feature extracted from GCN as the input to perform a Bayesian regression (predicting bias and variance, See Eqn. 5-6). They use Bayesian Optimization to pick the most promising next model with Expected Improvement, train it and take its resulting accuracy/latency as an additional training sample, and repeat. \n\nThey tested the framework on both single-objective and multi-objective tasks.  On the single-objective (accuracy task). They tested it on NasBench and LSTM-12K, two NAS datasets with pre-trained models and their performance. They obtained very good performance on both, beating LaNAS (previous SoTA) by 7.8x higher sample efficiency. On multiple-objective, they show higher efficiency in finding Pareto frontier models, compared to random search. \n\nOne main question I have is whether the next model is chosen given the current prediction model? For NasBench, did you run your predictor for all (420k minus explored) models and pick the one that maximizes Expected Improvement? Note that LaNAS is more efficient in that manner by sampling directly on polytopes formed by linear constraints. If so, how do you pick the next candidate models in open domain setting?\n\nIt looks like Eqn. 9 biases the training heavily towards high accuracy region, which is a hack. Although in the Appendix (Fig. 7) the authors have already perform some analysis on the effect of different weight terms, I wonder whether there is a more problem-independent way of doing it. The MCTS in LaNAS is one way that automatically focuses the search on the important regions. Currently, the proposed approach might limit the usability of the proposed method to other situations when accuracy is no longer that important. \n\nThe performance is really impressive in the NasBench and LSTM dataset. The paper mentioned that \u201cBO can really predict the precious model to explore next\u201d but didn\u2019t provide an examples in the paper. I would whether the author could visualize it in the next revision, which would be very cool. \n\nDo you have open domain search research in single-objective search? \n\nWhy not use NasNet architecture for a fair comparison with other NAS papers?\n\nIn Appendix, Fig. 6 shows that even without GCN and BO, a single MLP already achieves global optimal solution in LSTM-12K dataset with ~850 samples, already beating all the previous methods (Random, Reg Evolution, MCTS and LaNAS). If that\u2019s the case, I wonder how much roles the proposed methods (BO + GCN) play during search? Also what do you mean by \u201cwithout BO\u201d? Do you only predict the mean and assume all variance is constant? \n\n=====Post Rebuttal======\nI have read other reviewers' comments and the rebuttal. \n\nOne of the main problems in this paper is an unfair comparison against LaNAS. LaNAS only uses a single sample at each leaf, while they sample 100% to 0.1% of the models, evaluate them with the current BO model and find the best. For NasBench-101 with 420K models, even sampling 0.1% each time means ~400 samples and the performance (from the rebuttal) seems to degrade substantially from 100% case (1464.4->4004.4). This means that almost 3x more samples are needed, compared to what they claimed. \n\nI agree with the authors that calling BO function is super fast so maybe this is fine. However, on the open domain experiments, their performance is also not better than LaNAS+c/o, which they didn't list in the rebuttal. I listed it here:\n\nModel                      \tParams       \tTop-1 err\tNo. of samples truly evaluated\n-----------------------------------------------------------------------------------------------------------------\nBOGCN+cutout (V1)\t   3.1M \t          2.74\t                      200\nBOGCN+cutout (V2)\t   3.5M \t          2.61\t                      400\nLaNAS+c/o                       3.2M              2.53\u00b10.05                    803\n\nOverall this paper is on the borderline. I don't mind if the paper gets rejected. For now I lower the score to 3. ", "review_assessment:_checking_correctness_of_derivations_and_theory": "N/A"}